inf_vol <- inf_sat + F
runoff <- prec - inf_vol
return(data.frame(infiltration = inf_vol, horton_runoff = runoff))
}
infiltration(prec, na, delta_t, psi, k)
# function to calculate infiltration (mm)
infiltration <- function(
prec,     # precipitation hitting the soil, mm (input)
na,       # refillable porosity, m3/m3 (parameter)
delta_t,  # time step length, s (control parameter)
suc,      # suction at wetting front, mm (parameter)
k_s      # saturated hydraulic conductivity, mm/s (parameter)
) {
# precipitation flux, mm/s
prec_f <- prec / delta_t
# check if saturation will occur at all; write output if not
if( k_s > prec_f ) {
inf_vol <- prec
runoff <- 0
return(data.frame(infiltration = inf_vol, horton_runoff = runoff))
}
# depth of wetting front at saturation
d_wet <- suc / (prec_f / k_s - 1)
# infiltrated precipitation until saturation (mm)
inf_sat <- d_wet * na
# time until saturation (s)
t_sat <- inf_sat / prec_f
# check if saturation will occur within this time step; write output if not
if ( t_sat > delta_t ) {
inf_vol <- prec
runoff <- 0
return(data.frame(infiltration = inf_vol, horton_runoff = runoff))
}
# calculate half the amount of the remaining precipitation
F_start <- (prec - inf_sat) / 2
# calculate remaining infiltration iteratively (using F_start as start value)
F <- F_start
for (i in 1:12) { # not more than 12 iterations
F_t <- k_s (delta_t - t_sat) + na * suc * log( (F + na * suc) / (inf_sat + na * suc) )
if(abs(F_t - F) < 0.1)
break
F <- F_t
}
# calculate output
inf_vol <- inf_sat + F
runoff <- prec - inf_vol
return(data.frame(infiltration = inf_vol, horton_runoff = runoff))
}
# example
k <- 7.1e-4
psi <- 300
na <- 0.2
delta_t <- 3600
prec <- (3,5,12,11,13,10,9,7,7,10,11,8,8,6,5)
prec <- c(3,5,12,11,13,10,9,7,7,10,11,8,8,6,5)
infiltration(prec, na, delta_t, psi, k)
infiltration(prec[1], na, delta_t, psi, k)
infiltration(prec[2], na, delta_t, psi, k)
infiltration(prec[3], na, delta_t, psi, k)
infiltration(prec[5], na, delta_t, psi, k)
infiltration(100, na, delta_t, psi, k)
# function to calculate infiltration (mm per delta_t)
infiltration <- function(
prec,     # precipitation hitting the soil, mm (input)
na,       # refillable porosity, m3/m3 (parameter)
delta_t,  # time step length, s (control parameter)
suc,      # suction at wetting front, mm (parameter)
k_s      # saturated hydraulic conductivity, mm/s (parameter)
) {
# precipitation flux, mm/s
prec_f <- prec / delta_t
# check if saturation will occur at all; write output if not
if( k_s > prec_f ) {
inf_vol <- prec
runoff <- 0
return(data.frame(infiltration = inf_vol, horton_runoff = runoff))
}
# depth of wetting front at saturation
d_wet <- suc / (prec_f / k_s - 1)
# infiltrated precipitation until saturation (mm)
inf_sat <- d_wet * na
# time until saturation (s)
t_sat <- inf_sat / prec_f
# check if saturation will occur within this time step; write output if not
if ( t_sat > delta_t ) {
inf_vol <- prec
runoff <- 0
return(data.frame(infiltration = inf_vol, horton_runoff = runoff))
}
# calculate half the amount of the remaining precipitation
F_start <- (prec - inf_sat) / 2
# calculate remaining infiltration iteratively (using F_start as start value)
F <- F_start
for (i in 1:12) { # not more than 12 iterations
F_t <- k_s * (delta_t - t_sat) + na * suc * log( (F + na * suc) / (inf_sat + na * suc) )
if(abs(F_t - F) < 0.1)
break
F <- F_t
}
# calculate output
inf_vol <- inf_sat + F
runoff <- prec - inf_vol
return(data.frame(infiltration = inf_vol, horton_runoff = runoff))
}
infiltration(100, na, delta_t, psi, k)
sum(infiltration(100, na, delta_t, psi, k))
# function to calculate infiltration (mm per delta_t)
infiltration <- function(
prec,     # precipitation hitting the soil, mm (input)
wc,       # soil water content, m3/m3 (state variable)
wc_s,     # soil water content at saturation, m3/m3 (parameter)
delta_t,  # time step length, s (control parameter)
suc,      # suction at wetting front, mm (parameter)
k_s      # saturated hydraulic conductivity, mm/s (parameter)
) {
# precipitation flux, mm/s
prec_f <- prec / delta_t
# check if saturation will occur at all; write output if not
if( k_s > prec_f ) {
inf_vol <- prec
runoff <- 0
wc <- wc + inf_vol * 1000
return(data.frame(infiltration = inf_vol, horton_runoff = runoff, soilwat = wc))
}
# depth of wetting front at saturation
d_wet <- suc / (prec_f / k_s - 1)
# infiltrated precipitation until saturation (mm)
inf_sat <- d_wet * (wc_s - wc)
# time until saturation (s)
t_sat <- inf_sat / prec_f
# check if saturation will occur within this time step; write output if not
if ( t_sat > delta_t ) {
inf_vol <- prec
runoff <- 0
wc <- wc + inf_vol * 1000
return(data.frame(infiltration = inf_vol, horton_runoff = runoff, soilwat = wc))
}
# calculate half the amount of the remaining precipitation
F_start <- (prec - inf_sat) / 2
# calculate remaining infiltration iteratively (using F_start as start value)
F <- F_start
for (i in 1:12) { # not more than 12 iterations
F_t <- k_s * (delta_t - t_sat) + (wc_s - wc) * suc * log( (F + (wc_s - wc) * suc) / (inf_sat + (wc_s - wc) * suc) )
if(abs(F_t - F) < 0.1)
break
F <- F_t
}
# calculate output
inf_vol <- inf_sat + F
runoff <- prec - inf_vol
wc <- wc + inf_vol * 1000
return(data.frame(infiltration = inf_vol, horton_runoff = runoff, soilwat = wc))
}
# example
k <- 7.1e-4
psi <- 300
wc <- 0.4
wc_s <- 0.6
delta_t <- 3600
prec <- c(3,5,12,11,13,10,9,7,7,10,11,8,8,6,5)
res <- NULL
for (i in 1:length(prec)) {
res <- infiltration(prec[2], wc, wc_s, delta_t, psi, k)
inf <- c(inf,res$infiltration)
run <- c(run,res$horton_runoff)
wc <- res$soilwat
}
inf <- NULL
run <- NULL
# example
k <- 7.1e-4
psi <- 300
wc <- 0.4
wc_s <- 0.6
delta_t <- 3600
prec <- c(3,5,12,11,13,10,9,7,7,10,11,8,8,6,5)
inf <- NULL
run <- NULL
for (i in 1:length(prec)) {
res <- infiltration(prec[2], wc, wc_s, delta_t, psi, k)
inf <- c(inf,res$infiltration)
run <- c(run,res$horton_runoff)
wc <- res$soilwat
}
# function to calculate infiltration (mm per delta_t)
infiltration <- function(
prec,     # precipitation hitting the soil, mm (input)
wc,       # soil water content, m3/m3 (state variable)
wc_s,     # soil water content at saturation, m3/m3 (parameter)
delta_t,  # time step length, s (control parameter)
suc,      # suction at wetting front, mm (parameter)
k_s      # saturated hydraulic conductivity, mm/s (parameter)
) {
# precipitation flux, mm/s
prec_f <- prec / delta_t
# check if saturation will occur at all; write output if not
if( k_s > prec_f ) {
inf_vol <- prec
runoff <- 0
wc <- min(wc_s, wc + inf_vol * 1000)
return(data.frame(infiltration = inf_vol, horton_runoff = runoff, soilwat = wc))
}
# depth of wetting front at saturation
d_wet <- suc / (prec_f / k_s - 1)
# infiltrated precipitation until saturation (mm)
inf_sat <- d_wet * (wc_s - wc)
# time until saturation (s)
t_sat <- inf_sat / prec_f
# check if saturation will occur within this time step; write output if not
if ( t_sat > delta_t ) {
inf_vol <- prec
runoff <- 0
wc <- min(wc_s, wc + inf_vol * 1000)
return(data.frame(infiltration = inf_vol, horton_runoff = runoff, soilwat = wc))
}
# calculate half the amount of the remaining precipitation
F_start <- (prec - inf_sat) / 2
# calculate remaining infiltration iteratively (using F_start as start value)
F <- F_start
for (i in 1:12) { # not more than 12 iterations
F_t <- k_s * (delta_t - t_sat) + (wc_s - wc) * suc * log( (F + (wc_s - wc) * suc) / (inf_sat + (wc_s - wc) * suc) )
if(abs(F_t - F) < 0.1)
break
F <- F_t
}
# calculate output
inf_vol <- inf_sat + F
runoff <- prec - inf_vol
wc <- min(wc_s, wc + inf_vol * 1000)
return(data.frame(infiltration = inf_vol, horton_runoff = runoff, soilwat = wc))
}
# example
k <- 7.1e-4
psi <- 300
wc <- 0.4
wc_s <- 0.6
delta_t <- 3600
prec <- c(3,5,12,11,13,10,9,7,7,10,11,8,8,6,5)
inf <- NULL
run <- NULL
for (i in 1:length(prec)) {
res <- infiltration(prec[2], wc, wc_s, delta_t, psi, k)
inf <- c(inf,res$infiltration)
run <- c(run,res$horton_runoff)
wc <- res$soilwat
}
i
i=1
# example
k <- 7.1e-4
psi <- 300
wc <- 0.4
wc_s <- 0.6
delta_t <- 3600
prec <- c(3,5,12,11,13,10,9,7,7,10,11,8,8,6,5)
inf <- NULL
run <- NULL
res <- infiltration(prec[2], wc, wc_s, delta_t, psi, k)
res
inf <- c(inf,res$infiltration)
run <- c(run,res$horton_runoff)
wc <- res$soilwat
inf
runf
run
wc
i=2
res <- infiltration(prec[2], wc, wc_s, delta_t, psi, k)
prec_f <- prec / delta_t
k_s > prec_f
k_s=k
sub=psi
k_s > prec_f
# example
k <- 7.1e-4
psi <- 300
wc <- 0.4
wc_s <- 0.6
delta_t <- 3600
prec <- c(3,5,12,11,13,10,9,7,7,10,11,8,8,6,5)
inf <- NULL
run <- NULL
i=1
res <- infiltration(prec[i], wc, wc_s, delta_t, psi, k)
inf <- c(inf,res$infiltration)
run <- c(run,res$horton_runoff)
wc <- res$soilwat
i=2
res <- infiltration(prec[i], wc, wc_s, delta_t, psi, k)
i
inf <- c(inf,res$infiltration)
prec[i]
wc
prec_f <- prec / delta_t
k_s > prec_f
prec_f
prec
prec <- prec[i]
prec
prec_f <- prec / delta_t
k_s > prec_f
d_wet <- suc / (prec_f / k_s - 1)
suc=psi
d_wet <- suc / (prec_f / k_s - 1)
ks
k_s
inf_sat <- d_wet * (wc_s - wc)
t_sat <- inf_sat / prec_f
t_sat > delta_t
t_sat
inf_sat
inf(20, 2000, 3600, 7e-4, 0.2, 300, 50)
inf <- function(inf_i, t_sat, delta_t, k_s, na, suc, inf_sat) {
return(k_s (delta_t - t_sat) + na * suc * log( (inf_i + na * suc) / (inf_sat + na * suc) ))
}
inf(20, 2000, 3600, 7e-4, 0.2, 300, 50)
inf <- function(inf_i, t_sat, delta_t, k_s, na, suc, inf_sat) {
return(k_s * (delta_t - t_sat) + na * suc * log( (inf_i + na * suc) / (inf_sat + na * suc) ))
}
inf(20, 2000, 3600, 7e-4, 0.2, 300, 50)
inf(-17.98722, 2000, 3600, 7e-4, 0.2, 300, 50)
inf(5, 2000, 3600, 7e-4, 0.2, 300, 20)
log(0.9)
log(0.5)
log(0.2)
log(0.1)
inf(30, 2000, 3600, 7e-4, 0.2, 300, 20)
inf(8.186982, 2000, 3600, 7e-4, 0.2, 300, 20)
inf(-8.466378, 2000, 3600, 7e-4, 0.2, 300, 20)
inf(-25.26753, 2000, 3600, 7e-4, 0.2, 300, 20)
inf <- function(inf_i, t_sat, delta_t, k_s, na, suc, inf_sat) {
return(inf_sat + k_s * (delta_t - t_sat) + na * suc * log( (inf_i + na * suc) / (inf_sat + na * suc) ))
}
inf(50, 2000, 3600, 7e-4, 0.2, 300, 20)
inf(40.22722, 2000, 3600, 7e-4, 0.2, 300, 20)
inf(34.64479, 2000, 3600, 7e-4, 0.2, 300, 20)
inf(31.20625, 2000, 3600, 7e-4, 0.2, 300, 20)
F_t <- 50
for (i in i:12) {
F_a <- inf(F_t, 2000, 3600, 7e-4, 0.2, 300, 20)
if(abs(F_a-F_t) < 0.1)
break
F_t <- F_a
}
F_t <- 50
F_res <- NULL
for (i in i:12) {
F_a <- inf(F_t, 2000, 3600, 7e-4, 0.2, 300, 20)
F_res <- c(F_res,F_a)
if(abs(F_a-F_t) < 0.1)
break
F_t <- F_a
}
F_res
F_res[1]
F_t <- 50
F_res <- NULL
for (i in i:12) {
F_res[i] <- inf(F_t, 2000, 3600, 7e-4, 0.2, 300, 20)
if(abs(F_res[i]-F_t) < 0.1)
break
F_t <- F_res[i]
}
F_t <- 50
F_res <- NULL
for(i in 1:12) {
F_res[i] <- inf(F_t, 2000, 3600, 7e-4, 0.2, 300, 20)
if(abs(F_res[i]-F_t) < 0.1)
break
F_t <- F_res[i]
}
F_res
F_t
24.57935-24.45981
F_t <- 50
F_res <- NULL
for(i in 1:20) {
F_res[i] <- inf(F_t, 2000, 3600, 7e-4, 0.2, 300, 20)
if(abs(F_res[i]-F_t) < 0.1)
break
F_t <- F_res[i]
}
F_res
F_t <- 50
F_res <- NULL
for(i in 1:100) {
F_res[i] <- inf(F_t, 2000, 3600, 7e-4, 0.2, 300, 20)
#   if(abs(F_res[i]-F_t) < 0.1)
#     break
F_t <- F_res[i]
}
F_res
F_t <- 5
F_res <- NULL
for(i in 1:100) {
F_res[i] <- inf(F_t, 2000, 3600, 7e-4, 0.2, 300, 20)
#   if(abs(F_res[i]-F_t) < 0.1)
#     break
F_t <- F_res[i]
}
F_res
F_t <- 2
F_res <- NULL
for(i in 1:100) {
F_res[i] <- inf(F_t, 2000, 3600, 7e-4, 0.2, 300, 20)
#   if(abs(F_res[i]-F_t) < 0.1)
#     break
F_t <- F_res[i]
}
F_res
F_t <- 1
F_res <- NULL
for(i in 1:100) {
F_res[i] <- inf(F_t, 2000, 3600, 7e-4, 0.2, 300, 20)
#   if(abs(F_res[i]-F_t) < 0.1)
#     break
F_t <- F_res[i]
}
F_res
F_t <- 21
F_res <- NULL
for(i in 1:100) {
F_res[i] <- inf(F_t, 2000, 3600, 7e-4, 0.2, 300, 20)
#   if(abs(F_res[i]-F_t) < 0.1)
#     break
F_t <- F_res[i]
}
F_res
F_t <- 22
F_res <- NULL
for(i in 1:100) {
F_res[i] <- inf(F_t, 2000, 3600, 7e-4, 0.2, 300, 20)
#   if(abs(F_res[i]-F_t) < 0.1)
#     break
F_t <- F_res[i]
}
F_res
bla <- 25
-bla
# Input parameters
fi = 80 # mm/h
fe = 10 # mm/h
k = 5
t <- seq(1,24,by=1)# hours
inf <- function(fi,fe,k,t) {
return(fe + (fi-fe) * exp(-k*t))
}
plot(t, inf(fi,fe,k,t), type="l")
k = 1
plot(t, inf(fi,fe,k,t), type="l")
k = .5
plot(t, inf(fi,fe,k,t), type="l")
# Input parameters
fi = 80 # mm/h
fe = 10 # mm/h
k = .5
t <- seq(1,24,by=1)# hours
wc_res <- 0.1
wc_sat <- 0.6
wc <- 0.3
inf <- function(fi,fe,k,t,wc,wc_sat,wc_res) {
return(fe + (fi-fe) * exp(-k*t*(wc-wc_res)/(wc_sat-wc_res)))
}
plot(t, inf(fi,fe,k,t,wc,wc_sat,wc_res), type="l")
# Input parameters
fi = 80 # mm/h
fe = 10 # mm/h
k = .5
t <- seq(1,24,by=1)# hours
wc_res <- 0.1
wc_sat <- 0.6
wc <- 0.5
inf <- function(fi,fe,k,t,wc,wc_sat,wc_res) {
return(fe + (fi-fe) * exp(-k*t*(wc-wc_res)/(wc_sat-wc_res)))
}
plot(t, inf(fi,fe,k,t,wc,wc_sat,wc_res), type="l")
# Input parameters
fi = 80 # mm/h
fe = 10 # mm/h
k = .5
t <- seq(1,24,by=1)# hours
wc_res <- 0.1
wc_sat <- 0.6
wc <- 0.6
inf <- function(fi,fe,k,t,wc,wc_sat,wc_res) {
return(fe + (fi-fe) * exp(-k*t*(wc-wc_res)/(wc_sat-wc_res)))
}
plot(t, inf(fi,fe,k,t,wc,wc_sat,wc_res), type="l")
# Input parameters
fi = 80 # mm/h
fe = 10 # mm/h
k = .5
t <- seq(1,24,by=1)# hours
wc_res <- 0.1
wc_sat <- 0.6
wc <- 0.1
inf <- function(fi,fe,k,t,wc,wc_sat,wc_res) {
return(fe + (fi-fe) * exp(-k*t*(wc-wc_res)/(wc_sat-wc_res)))
}
plot(t, inf(fi,fe,k,t,wc,wc_sat,wc_res), type="l")
# Input parameters
fi = 80 # mm/h
fe = 10 # mm/h
k = .5
t <- seq(1,24,by=1)# hours
wc_res <- 0.1
wc_sat <- 0.6
wc <- 0.2
inf <- function(fi,fe,k,t,wc,wc_sat,wc_res) {
return(fe + (fi-fe) * exp(-k*t*(wc-wc_res)/(wc_sat-wc_res)))
}
plot(t, inf(fi,fe,k,t,wc,wc_sat,wc_res), type="l")
